---
import { Image } from 'astro:assets';
import map from "public/images/map.png";

const unosatEndpoint = 'https://us-east-1.aws.data.mongodb-api.com/app/unosat-gaza-gyepzoy/endpoint/gazaunosat';

async function fetchUnosatData() {
  try {
    const response = await fetch(unosatEndpoint);
    if (!response.ok) {
      throw new Error(`HTTP error! status: ${response.status}`);
    }
    const data = await response.json();
    return JSON.parse(data.body);  // Parse the body string into JSON
  } catch (error) {
    console.error('Error fetching UNOSAT data:', error);
    return null;
  }
}

const unosatData = await fetchUnosatData();
const unosatDataSerialized = JSON.stringify(unosatData);
---

<section class="md:px-12 sm:px-8 text-white border-zinc-800">
    <div class="border-x border border-zinc-800">
        <h2 class="text-4xl md:text-6xl xl:text-7xl text-white p-10">Gaza Strip Road Assessment</h2>

        <div class="unosat-map-container border-t border-zinc-800">
            <div id="unosatMap" class="map-area">
                <Image class="unosat-map-placeholder border-zinc-800"
                    src={map}
                    alt="A map placeholder"
                    width="900"
                    height="900"
                    loading="lazy"
                    decoding="async"
                />
                
            </div>
            <div id="unosatText" class="info-area">
                <h1 class="text-3xl tracking-wide text-balance md:text-4xl text-black">About this map</h1>
                <p class="unosat-event-data tracking-wide text-black">This map shows the road assessment data for the Gaza Strip, based on UNOSAT analysis. Click on a road segment to view details.</p>
                <div id="map-legend" class="map-legend">
                    <h4>Road Condition</h4>
                    <div><span class="legend-key" style="background-color: #FF0000;"></span>Destroyed</div>
                    <div><span class="legend-key" style="background-color: #FFA500;"></span>Severely affected</div>
                    <div><span class="legend-key" style="background-color: #FFFF00;"></span>Moderately affected</div>
                  </div>
                  
                <div class="unosat-map-info"></div>
            </div>
        </div>
    </div>
</section>
<section>
    <table>
        <thead>
            <tr>
                <th>Region</th>
                <th>Destroyed (km)</th>
                <th>Severely affected (km)</th>
                <th>Moderately affected (km)</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>North Gaza</td>
                <td id="north-destroyed">0</td>
                <td id="north-severe">0</td>
                <td id="north-moderate">0</td>
            </tr>
            <tr>
                <td>Gaza</td>
                <td id="gaza-destroyed">0</td>
                <td id="gaza-severe">0</td>
                <td id="gaza-moderate">0</td>
            </tr>
            <tr>
                <td>Deir Al-Balah</td>
                <td id="deir-destroyed">0</td>
                <td id="deir-severe">0</td>
                <td id="deir-moderate">0</td>
            </tr>
            <tr>
                <td>Khan Yunis</td>
                <td id="khan-destroyed">0</td>
                <td id="khan-severe">0</td>
                <td id="khan-moderate">0</td>
            </tr>
            <tr>
                <td>Rafah</td>
                <td id="rafah-destroyed">0</td>
                <td id="rafah-severe">0</td>
                <td id="rafah-moderate">0</td>
            </tr>
        </tbody>
    </table>
</section>

<link href='https://api.mapbox.com/mapbox-gl-js/v2.6.1/mapbox-gl.css' rel='stylesheet' />

<script define:vars={{ unosatDataSerialized }}>
if (typeof window !== 'undefined') {
  const loadScripts = () => {
    const proj4Script = document.createElement('script');
    proj4Script.src = "https://cdnjs.cloudflare.com/ajax/libs/proj4js/2.7.5/proj4.js";
    proj4Script.onload = () => {
      const mapboxScript = document.createElement('script');
      mapboxScript.src = "https://api.mapbox.com/mapbox-gl-js/v2.6.1/mapbox-gl.js";
      mapboxScript.onload = initializeUnosatMapbox;
      document.head.appendChild(mapboxScript);
    };
    document.head.appendChild(proj4Script);
  };

  const initializeUnosatMapbox = () => {
    mapboxgl.accessToken = 'pk.eyJ1IjoiZ29vZC1zaGVwaGVyZC1jb2xsZWN0aXZlIiwiYSI6ImNsaDUwdXY0ZDIzNnUzZG9nZ3BhYXhuaTQifQ.FX0JA3BbKdy5-IJ5gkDpKw';

    const map = new mapboxgl.Map({
      container: 'unosatMap',
      style: 'mapbox://styles/mapbox/dark-v10',
      center: [34.4, 31.4],
      zoom: 9,
      attributionControl: false,
    });

    map.on('load', () => {
      console.log('Map loaded');
      const placeholder = document.querySelector('.unosat-map-placeholder');
      if (placeholder && placeholder.parentNode) {
        placeholder.parentNode.removeChild(placeholder);
      }

      try {
        const unosatData = JSON.parse(unosatDataSerialized);
        console.log('Parsed UNOSAT data:', unosatData);

        if (!unosatData || !unosatData.features || unosatData.features.length === 0) {
          console.error('No features found in UNOSAT data');
          return;
        }

        // Transform coordinates from EPSG:3857 to EPSG:4326
        unosatData.features.forEach(feature => {
          if (feature.geometry && feature.geometry.coordinates) {
            feature.geometry.coordinates = feature.geometry.coordinates.map(coordSet => 
              coordSet.map(coord => 
                proj4('EPSG:3857', 'EPSG:4326', [coord[0], coord[1]])
              )
            );
          }
        });

        map.addSource('unosat-data-source', {
          type: 'geojson',
          data: unosatData,
        });

        map.addLayer({
  id: 'unosat-data-layer',
  type: 'line',
  source: 'unosat-data-source',
  paint: {
    'line-color': [
      'match',
      ['get', 'UNHabitat_DL'],
      'Destroyed', '#FF0000',
      'Severely affected', '#FFA500',
      'Moderately affected', '#FFFF00',
      '#FFFFFF' // Default color for any other case
    ],
    'line-width': 2
  },
});

        console.log('Layer added');

        // Fit the map to the data bounds
        const bounds = new mapboxgl.LngLatBounds();
        unosatData.features.forEach(feature => {
          if (feature.geometry && feature.geometry.coordinates) {
            feature.geometry.coordinates.forEach(coordSet => {
              coordSet.forEach(coord => {
                bounds.extend(coord);
              });
            });
          }
        });
        map.fitBounds(bounds, { padding: 20 });

        // Add click event
        map.on('click', 'unosat-data-layer', (e) => {
          const properties = e.features[0].properties;

          document.querySelector('#unosatText h1').textContent = `Road in ${properties.Governorate}`;
document.querySelector('.unosat-event-data').innerHTML = `
  <div><strong>Road Type:</strong> ${properties.RoadType || 'N/A'}</div>
  <div><strong>Damage Level:</strong> ${properties.UNHabitat_DL || 'N/A'}</div>
  <div><strong>Length:</strong> ${properties.Length_km ? properties.Length_km.toFixed(2) + ' km' : 'N/A'}</div>
  <div><strong>Sensor Date:</strong> ${properties.SensorDate || 'N/A'}</div>
`;

          map.flyTo({
            center: e.lngLat,
            zoom: 15,
            essential: true,
          });
        });

        // Change cursor on hover
        map.on('mouseenter', 'unosat-data-layer', () => {
          map.getCanvas().style.cursor = 'pointer';
        });

        map.on('mouseleave', 'unosat-data-layer', () => {
          map.getCanvas().style.cursor = '';
        });

      } catch (error) {
        console.error('Error setting up the map:', error);
      }
    });

    map.on('error', (e) => {
      console.error('Mapbox error:', e);
    });
  };

  const unosatMapContainer = document.getElementById('unosatMap');
  const observer = new IntersectionObserver((entries, observer) => {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        loadScripts();
        observer.unobserve(entry.target);
      }
    });
  }, { threshold: 0.1 });

  observer.observe(unosatMapContainer);
}
</script>

<style>
    table {
        
        border-collapse: collapse;
        margin-top: 1.5rem;
    }
    td, th {
        border: 1px solid #171717;
        padding: 0.5rem;
        text-align: center;
        color: #171717 !important;
    }
  .unosat-map-container {
    width: 100%;
    display: flex;
    border-top: 1px solid #27272a;
  }

  .map-area {
    flex: 2;
    position: relative;
    height: 600px;
  }

  .info-area {
    flex: 1;
    padding: 2rem;
    background-image: url("data:image/svg+xml,%3Csvg width='6' height='6' viewBox='0 0 6 6' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='%23b0b0b0' fill-opacity='0.28' fill-rule='evenodd'%3E%3Cpath d='M5 0h1L0 6V5zM6 5v1H5z'/%3E%3C/g%3E%3C/svg%3E");
  }

  .unosat-map-placeholder {
    object-fit: cover;
    width: 100%;
    height: 100%;
  }

  .map-legend {
    padding: 10px;
    border-radius: 4px;
    z-index: 1;
    color: black !important;
  }

  .map-legend h4 {
    margin: 0 0 10px;
    font-size: 16px;
  }

  .legend-key {
    display: inline-block;
    width: 16px;
    height: 16px;
    margin-right: 8px;
  }

  .unosat-map-info {
    margin-top: auto;
  }

  .unosat-event-data {
    margin-bottom: 1.5rem;
    display: block;
  }

  @media (max-width: 900px) {
    .unosat-map-container {
      flex-direction: column;
    }

    .map-area, .info-area {
      width: 100%;
    }

    .map-area {
      height: 50vh;
    }
  }
</style>