---
// src/layouts/BlogLayout.astro
import BaseLayout from "./BaseLayout.astro";
import InlineEmail from "@/components/global/InlineEmail.astro";

export interface Props {
  title: string;
  date: string;
  readingTime: number;
  featuredImage?: string;
  author?: string;
  excerpt?: string;
  category?: string;
  tags?: string;
}

const { title, date, readingTime, featuredImage, author, excerpt, category, tags } = Astro.props;
---

<BaseLayout isBlogPost={true}>
  <section class="md:px-12 sm:px-8">
    <div class="border-x border-zinc-800 h-full">
      <div class="grid grid-cols-1 lg:grid-cols-2 h-full">
        <div class="border-r border-zinc-800 flex flex-col h-full">
          <div class="bg-black border-b border-zinc-800">
            <p class="text-zinc-600 text-sm flex items-center pl-1 p-4 lg:px-10">
              {category && <span class="px-2 py-1 bg-zinc-800 rounded text-white mr-2">{category}</span>}
              {tags && <span class="px-2 py-1 bg-zinc-800 rounded text-blue-200">{tags}</span>}
            </p>
          </div>
          <div class="p-8 lg:px-10 bg-black flex-grow flex flex-col justify-between">
            <div>
              <h1 class="text-4xl md:text-6xl xl:text-7xl text-zinc-200 mt-12 font-semibold">
                {title}
              </h1>
              <h3 class="text-xl md:text-2xl xl:text-3xl text-zinc-200 mt-4">
                {excerpt}
              </h3>
              <p class="text-white mt-4">
                {date} Â· {readingTime} min read
              </p>
              <p class="text-white mt-2">
                {author && `By ${author}`}
              </p>
            </div>
          </div>
        </div>
        {featuredImage && (
          <img
            class="h-full w-full object-cover object-center border-l border-zinc-800"
            src={featuredImage}
            alt={title}
          />
        )}
      </div>
    </div>
  </section>
  
  
  <section class="md:px-12 sm:px-8">
    <div class="border-x grid grid-cols-1 lg:grid-cols-1 border-t border-zinc-800 gap-px">
      <div class="lg:col-start-1 lg:col-span-1 p-8 lg:px-10">
        <div class="blog-styles mx-auto" style="max-width: 50rem; margin: 0 auto;">
          <slot></slot>
        </div>
      </div>
    </div>
  </section>

  <!-- InlineEmail component to be inserted dynamically -->
  <div id="inline-email-placeholder" class="hidden">
    <InlineEmail />
  </div>

  <script>
    document.addEventListener('DOMContentLoaded', function() {
      const blogContent = document.querySelector('.blog-styles');
      const paragraphs = blogContent.querySelectorAll('p');
      const emailPlaceholder = document.getElementById('inline-email-placeholder').innerHTML;

      if (paragraphs.length > 3) {
        const inlineEmail = document.createElement('div');
        inlineEmail.innerHTML = emailPlaceholder;
        paragraphs[2].insertAdjacentElement('afterend', inlineEmail);
      }
    });
  </script>
</BaseLayout>
